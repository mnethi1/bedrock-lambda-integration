name: Deploy Bedrock Lambda Integration

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

env:
  AWS_REGION: us-east-1
  TF_VERSION: 1.5.0

jobs:
  validate:
    name: Validate Code
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Install Python dependencies
      run: |
        cd lambda
        pip install -r requirements.txt
        pip install pylint pytest
    
    - name: Lint Python code
      run: |
        cd lambda
        pylint handler.py --disable=C0114,C0116
    
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v2
      with:
        terraform_version: ${{ env.TF_VERSION }}
    
    - name: Terraform Format Check
      run: |
        cd terraform
        terraform fmt -check
    
    - name: Terraform Init
      run: |
        cd terraform
        terraform init -backend=false
    
    - name: Terraform Validate
      run: |
        cd terraform
        terraform validate

  deploy-staging:
    name: Deploy to Staging
    needs: validate
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/develop'
    environment: staging
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}
    
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v2
      with:
        terraform_version: ${{ env.TF_VERSION }}
    
    - name: Terraform Init
      run: |
        cd terraform
        terraform init
    
    - name: Terraform Plan
      run: |
        cd terraform
        terraform plan -var="project_name=bedrock-claude-staging"
    
    - name: Terraform Apply
      run: |
        cd terraform
        terraform apply -auto-approve -var="project_name=bedrock-claude-staging"
    
    - name: Test Lambda Function
      run: |
        FUNCTION_NAME=$(terraform -chdir=terraform output -raw lambda_function_name)
        aws lambda invoke \
          --function-name $FUNCTION_NAME \
          --payload file://lambda/test_payload.json \
          --cli-binary-format raw-in-base64-out \
          response.json
        cat response.json

  deploy-production:
    name: Deploy to Production
    needs: validate
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    environment: production
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID_PROD }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY_PROD }}
        aws-region: ${{ env.AWS_REGION }}
    
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v2
      with:
        terraform_version: ${{ env.TF_VERSION }}
    
    - name: Terraform Init
      run: |
        cd terraform
        terraform init
    
    - name: Terraform Plan
      run: |
        cd terraform
        terraform plan -var="project_name=bedrock-claude-prod"
    
    - name: Terraform Apply
      run: |
        cd terraform
        terraform apply -auto-approve -var="project_name=bedrock-claude-prod"
    
    - name: Test Lambda Function
      run: |
        FUNCTION_NAME=$(terraform -chdir=terraform output -raw lambda_function_name)
        aws lambda invoke \
          --function-name $FUNCTION_NAME \
          --payload file://lambda/test_payload.json \
          --cli-binary-format raw-in-base64-out \
          response.json
        cat response.json
